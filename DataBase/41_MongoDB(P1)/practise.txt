Microsoft Windows [Version 10.0.26100.4652]
(c) Microsoft Corporation. All rights reserved.

C:\Users\karan>mongosh
Current Mongosh Log ID: 687f152b9f4329a1fceec4a8
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.6
Using MongoDB:          8.0.11
Using Mongosh:          2.5.6

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-07-21T22:31:01.964+05:45: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use college
switched to db college
college>
(To exit, press Ctrl+C again or Ctrl+D or type .exit)
college>

C:\Users\karan>mongosh
Current Mongosh Log ID: 687f155cc653f6bcc4eec4a8
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.6
test> 1+2
3
test> "karan".toUpperCase();
KARAN
test> show dbs
TESTDB  40.00 KiB
admin   40.00 KiB
config  72.00 KiB
local   40.00 KiB
test> use admin
switched to db admin
admin> exit()

C:\Users\karan>mongosh
Current Mongosh Log ID: 687f1617711d6cc725eec4a8
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.5.6
Using MongoDB:          8.0.11
Using Mongosh:          2.5.6

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/

------
   The server generated these startup warnings when booting
   2025-07-21T22:31:01.964+05:45: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use college
switched to db college
college> show dbs
TESTDB  40.00 KiB
admin   40.00 KiB
config  72.00 KiB
local   40.00 KiB
college> dv
ReferenceError: dv is not defined
college> db
college
college> show collections

college> db.student.insertOne({name:"Karan",age:20,marks:98})
{
  acknowledged: true,
  insertedId: ObjectId('687f21a7711d6cc725eec4a9')
}
college> show dbs
TESTDB   40.00 KiB
admin    40.00 KiB
college   8.00 KiB
config   72.00 KiB
local    40.00 KiB
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.insertOne({name:"Karan",age:20,marks:98})
{
  acknowledged: true,
  insertedId: ObjectId('687f221a711d6cc725eec4aa')
}
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.insertOne({name:"kumar",post:"Senoir Tech Lead",});
{
  acknowledged: true,
  insertedId: ObjectId('687f2274711d6cc725eec4ab')
}
college> student.find();
ReferenceError: student is not defined
college> db.student.find();
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead'
  }
]
college> db.student.insertMany([{name:"Kamat",age:21}],[name:"kewat",city:"Biratnagar"])
Uncaught:
SyntaxError: Unexpected token, expected "," (1:51)

> 1 | db.student.insertMany([{name:"Kamat",age:21}],[name:"kewat",city:"Biratnagar"])
    |                                                    ^
  2 |

college> db.student.insertMany([{name:"Kamat",age:21}],[{name:"kewat",city:"Biratnagar"}])
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('687f234d711d6cc725eec4ac') }
}
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead'
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 }
]
college> db.student.find({name:"kamat");
Uncaught:
SyntaxError: Unexpected token, expected "," (1:29)

> 1 | db.student.find({name:"kamat");
    |                              ^
  2 |

college> db.student.find({name:"kamat"});

college> db.student.find({name:"Kamat"});
[
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 }
]
college> db.student.find({name:"Karan"});
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.findOne({name:"Karan"});
{
  _id: ObjectId('687f21a7711d6cc725eec4a9'),
  name: 'Karan',
  age: 20,
  marks: 98
}
college> db.student.find({marks:{$gt:75}});
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.find({marks:{$ge:75}});
MongoServerError[BadValue]: unknown operator: $ge
college> db.student.find({marks:{$gte:75}});
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.find({name:{$in:["Karan","Kumar"]}});
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.find({name:{$in:["karan","Kumar"]}});

college> db.student.find({$or:[{marks:{$gt:75}},{name:"Karan"}]});
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  }
]
college> db.student.updateOne({name:"kumar"},{$set:{marks:100}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Karan',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead',
    marks: 100
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 }
]
college> db.student.updateMany({name:"Karan"},{$set:{name:"Sharma"}});
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 2,
  modifiedCount: 2,
  upsertedCount: 0
}
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead',
    marks: 100
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 }
]
college> db.student.insertOne({name:"Mong",performance:{makrs:88,garde:"A"}});
{
  acknowledged: true,
  insertedId: ObjectId('687f325d711d6cc725eec4ad')
}
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead',
    marks: 100
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 },
  {
    _id: ObjectId('687f325d711d6cc725eec4ad'),
    name: 'Mong',
    performance: { makrs: 88, garde: 'A' }
  }
]
college> db.student.find({"performance.makrs":88});
[
  {
    _id: ObjectId('687f325d711d6cc725eec4ad'),
    name: 'Mong',
    performance: { makrs: 88, garde: 'A' }
  }
]
college> db.student.find()
[
  {
    _id: ObjectId('687f21a7711d6cc725eec4a9'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead',
    marks: 100
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 },
  {
    _id: ObjectId('687f325d711d6cc725eec4ad'),
    name: 'Mong',
    performance: { makrs: 88, garde: 'A' }
  }
]
college> db.student.deleteOne({age:20});
{ acknowledged: true, deletedCount: 1 }
college> db.student.find()
[
  {
    _id: ObjectId('687f221a711d6cc725eec4aa'),
    name: 'Sharma',
    age: 20,
    marks: 98
  },
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead',
    marks: 100
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 },
  {
    _id: ObjectId('687f325d711d6cc725eec4ad'),
    name: 'Mong',
    performance: { makrs: 88, garde: 'A' }
  }
]
college> db.student.deleteMany({marks:{$lt:100}});
{ acknowledged: true, deletedCount: 1 }
college> db.student.find()
[
  {
    _id: ObjectId('687f2274711d6cc725eec4ab'),
    name: 'kumar',
    post: 'Senoir Tech Lead',
    marks: 100
  },
  { _id: ObjectId('687f234d711d6cc725eec4ac'), name: 'Kamat', age: 21 },
  {
    _id: ObjectId('687f325d711d6cc725eec4ad'),
    name: 'Mong',
    performance: { makrs: 88, garde: 'A' }
  }
]
college> db.student.deleteMany({});
{ acknowledged: true, deletedCount: 3 }
college> db.student.find()

college> show dbs;
TESTDB   40.00 KiB
admin    40.00 KiB
college  48.00 KiB
config   96.00 KiB
local    40.00 KiB
college>